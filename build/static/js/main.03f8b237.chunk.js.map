{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","type","useState","colorHex","setColorHex","isCopyColor","setIsCopyColor","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","join","onClick","navigator","clipboard","writeText","App","inputColor","setInputColor","error","setError","Values","all","colorList","setColorList","Fragment","onSubmit","e","preventDefault","console","log","message","handleSubmit","placeholder","value","onChange","target","map","colorItem","id","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAsB,IAAfD,EAAIE,OAAe,IAAMF,EAAMA,EAOzBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,IC+BvDC,EAlCK,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAAW,EACbC,mBAAS,IADI,mBACtCC,EADsC,KAC5BC,EAD4B,OAEPF,oBAAS,GAFF,mBAEtCG,EAFsC,KAEzBC,EAFyB,KAI7CC,qBAAU,WACRH,EAAYV,EAAQ,WAAR,cAAYK,OACvB,CAACA,IAEJQ,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,GAAe,KACd,KAEH,OAAO,kBAAMI,aAAaF,MACzB,CAACH,IAOJ,OACE,6BACEM,UAAS,gBAAoB,SAATV,EAAkB,QAAU,eAChDW,MAAO,CAAEC,gBAAgB,OAAD,OAASd,EAAIe,OAAb,MACxBC,QAAS,kBARXC,UAAUC,UAAUC,UAAUf,QAC9BG,GAAe,KASb,uBAAGK,UAAU,iBAAiBX,EAA9B,KACA,uBAAGW,UAAU,eAAeR,GAC3BE,GAAe,uBAAGM,UAAU,SAAb,yB,gBCaPQ,MAxCf,WAAgB,IAAD,EACuBjB,mBAAS,IADhC,mBACNkB,EADM,KACMC,EADN,OAEanB,oBAAS,GAFtB,mBAENoB,EAFM,KAECC,EAFD,OAGqBrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,KAHxD,mBAGNC,EAHM,KAGKC,EAHL,KAiBb,OACE,kBAAC,IAAMC,SAAP,KACE,6BAASjB,UAAU,aACjB,+CACA,0BAAMkB,SAAU,SAACC,GAAD,OAhBD,SAACA,GACpBA,EAAEC,iBAEF,IACE,IAAIL,EAAY,IAAIF,IAAOJ,GAAYK,IAAI,IAC3CE,EAAaD,GACb,MAAOJ,GACPC,GAAS,GACTS,QAAQC,IAAIX,EAAMY,UAQOC,CAAaL,KAClC,2BACE7B,KAAK,OAAOmC,YAAY,UACxBzB,UAAWW,EAAQ,QAAU,OAC7Be,MAAOjB,EACPkB,SAAU,SAACR,GAAD,OAAOT,EAAcS,EAAES,OAAOF,UAE1C,4BAAQpC,KAAK,SAASU,UAAU,OAAhC,YAGJ,6BAASA,UAAU,UAChBe,EAAUc,KAAI,SAACC,EAAWC,GACzB,OAAO,kBAAC,EAAD,eAAaC,IAAG,eAAUD,IAAUD,UCjCrDG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.03f8b237.chunk.js","sourcesContent":["function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length === 1 ? '0' + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport default rgbToHex;\n","import React, { useState, useEffect } from 'react'\nimport rgbToHex from './utils'\n\nconst SingleColor = ({ rgb, weight, type }) => {\n  const [colorHex, setColorHex] = useState('');\n  const [isCopyColor, setIsCopyColor] = useState(false);\n\n  useEffect(() => {\n    setColorHex(rgbToHex(...rgb))\n  }, [rgb])\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setIsCopyColor(false);\n    }, 3000);\n\n    return () => clearTimeout(timeout);\n  }, [isCopyColor])\n\n  const copyColor = () => {\n    navigator.clipboard.writeText(colorHex);\n    setIsCopyColor(true);\n  }\n\n  return (\n    <article\n      className={`color ${type === 'tint' ? 'false' : 'color-light'}`}\n      style={{ backgroundColor: `rgb(${rgb.join()})` }}\n      onClick={() => copyColor()}\n    >\n      <p className='percent-value'>{weight}%</p>\n      <p className='color-value'>{colorHex}</p>\n      {isCopyColor && <p className='alert'>copied to clipboard</p>}\n    </article>\n  );\n}\n\nexport default SingleColor\n","import React, { useState } from 'react'\nimport SingleColor from './SingleColor'\n\nimport Values from 'values.js'\n\nfunction App() {\n  const [inputColor, setInputColor] = useState('');\n  const [error, setError] = useState(false);\n  const [colorList, setColorList] = useState(new Values('#f15025').all(10));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    try {\n      let colorList = new Values(inputColor).all(10);\n      setColorList(colorList)\n    } catch (error) {\n      setError(true);\n      console.log(error.message)\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <section className='container'>\n        <h3>color generator</h3>\n        <form onSubmit={(e) => handleSubmit(e)}>\n          <input\n            type='text' placeholder='#f15025'\n            className={error ? 'error' : 'null'}\n            value={inputColor}\n            onChange={(e) => setInputColor(e.target.value)}\n          />\n          <button type='submit' className='btn'>submit</button>\n        </form>\n      </section>\n      <section className='colors'>\n        {colorList.map((colorItem, id) => {\n          return <SingleColor key={`color${id}`} {...colorItem} />\n        })}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}